{"version":3,"file":"static/js/68.69bff016.chunk.js","mappings":"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","sources":["components/Main/Users/User/UserCard.tsx","components/Main/Users/User/Paginator.tsx","webpack://me-app-react/./src/components/Main/Users/UserSelector/UserSelector.module.css?e0a5","components/Main/Users/UserSelector/UserSelector.tsx","components/Main/Users/User/User.tsx","components/Main/Users/UsersContainer.tsx"],"sourcesContent":["import React, {FC} from 'react'\nimport style from '../User.module.css'\nimport {NavLink} from 'react-router-dom'\nimport {Avatar} from '../../../../common/Avatar'\nimport cn from 'classnames'\nimport {userType} from '../../../../types/types'\n\ntype Props = {\n  usersRequest: Array<number>\n  isAuthorized: boolean\n  unfollowSuccessful: (userId: number) => void\n  followSuccessful: (userId: number) => void\n  user: userType\n}\nlet UserCard: FC<Props> = ({\n  usersRequest,\n  unfollowSuccessful,\n  followSuccessful,\n  isAuthorized,\n  user,\n}) => {\n  return (\n    <div>\n      <div className={style.user}>\n        <NavLink to={'/profile/' + user.id} className={style.avatar}>\n          <Avatar avatar={user.photos.small} />\n        </NavLink>\n        <div className={style.description}>\n          <div>{user.name}</div>\n          <div>{user.status}</div>\n        </div>\n\n        {isAuthorized && (\n          <button\n            disabled={usersRequest.some((element) => element === user.id)}\n            className={cn(style.subscribe, {[style.un]: user.followed})}\n            onClick={() => {\n              user.followed\n                ? unfollowSuccessful(user.id)\n                : followSuccessful(user.id)\n            }}>\n            {user.followed ? 'Unfollowing' : 'Following'}\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport {UserCard}\n","import React, {FC, useState} from 'react'\nimport style from '../User.module.css'\nimport classnames from 'classnames'\n\ntype Props = {\n  pagesLimit: number\n  pageNumber: number\n  totalPage: number\n  choosePage: (num: number) => void\n}\n\nlet Paginator: FC<Props> = ({\n  pagesLimit,\n  pageNumber,\n  totalPage,\n  choosePage,\n}) => {\n  const [openPage, setOpenPage] = useState(10)\n  let showMoreUsers = () => {\n    setOpenPage((prevState) => prevState + pagesLimit)\n  }\n  let backPageUsers = () => {\n    setOpenPage((prevState) => prevState - pagesLimit)\n  }\n  let chooseNumberPage = (num: number) => {\n    if (num !== pageNumber) choosePage && choosePage(num)\n  }\n  let boldStyle = (num: number) => {\n    return num === pageNumber ? style.bold : style.pageNumber\n  }\n\n  let pages: Array<number> = []\n  for (let i = 1; i < totalPage; i++) {\n    pages.push(i)\n  }\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination\">\n        {openPage > 10 && (\n          <li className=\"page-item\" onClick={backPageUsers}>\n            <span className=\"page-link\" aria-label=\"Previous\">\n              <span aria-hidden=\"true\">&laquo;</span>\n            </span>\n          </li>\n        )}\n        {pages.map((num) => {\n          return (\n            num <= openPage &&\n            num > openPage - 10 && (\n              <li\n                className={classnames('page-item', boldStyle(num))}\n                key={num}\n                onClick={() => chooseNumberPage(num)}>\n                <span className=\"page-link\">\n                  {num < 10 ? <>&nbsp; {num}</> : num}\n                </span>\n              </li>\n            )\n          )\n        })}\n        {openPage < totalPage && (\n          <li className=\"page-item\" onClick={showMoreUsers}>\n            <span className=\"page-link\" aria-label=\"Next\">\n              <span aria-hidden=\"true\">&raquo;</span>\n            </span>\n          </li>\n        )}\n      </ul>\n    </nav>\n  )\n}\n\nexport {Paginator}\n","// extracted by mini-css-extract-plugin\nexport default {\"userName\":\"UserSelector_userName__dV9nB\",\"searchForm\":\"UserSelector_searchForm__zJ3Up\"};","import {Field, Form, Formik, FormikHelpers} from 'formik'\nimport React, {FC, useState} from 'react'\nimport styles from './UserSelector.module.css'\nimport {isShowFriendType} from '../../../../redux/usersFindReducer'\n\ntype Props = {\n  getUsers: (\n    pageNumber: number,\n    usersNumber: number,\n    userName: string,\n    isFriend: isShowFriendType,\n  ) => void\n  isFriend: isShowFriendType\n  userName: string\n  pageNumber: number\n  usersNumber: number\n}\n\nconst UserSelectorForm: FC<Props> = (props) => {\n  const [searchByPreviousName, setSearchByPreviousName] = useState(\n    props.userName ? props.userName : '',\n  )\n  const [searchByIsFriend, setSearchByIsFriend] = useState(\n    props.isFriend ? props.isFriend : 'any',\n  )\n  type initialValuesTypes = typeof initialValues\n  const initialValues = {\n    pageNumber: props.pageNumber,\n    usersNumber: props.usersNumber,\n    userName: searchByPreviousName,\n    isFriend: searchByIsFriend,\n  }\n\n  const onSubmit = (\n    values: initialValuesTypes,\n    {setSubmitting}: FormikHelpers<initialValuesTypes>,\n  ) => {\n    if (\n      searchByPreviousName === values.userName &&\n      searchByIsFriend === values.isFriend\n    ) {\n      props.getUsers(\n        values.pageNumber,\n        values.usersNumber,\n        values.userName,\n        values.isFriend,\n      )\n    } else {\n      props.getUsers(1, values.usersNumber, values.userName, values.isFriend)\n      setSearchByPreviousName(values.userName)\n    }\n    setSubmitting(false)\n  }\n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={initialValues}\n      validateOnBlur\n      onSubmit={onSubmit}>\n      {({values}) => (\n        <Form>\n          <div className={styles.searchForm}>\n            <div className={styles.userName}>\n              <Field\n                type=\"text\"\n                name=\"userName\"\n                value={values.userName}\n                placeholder=\"find a user\"\n              />\n              <hr />\n            </div>\n\n            <div>\n              <Field as=\"select\" name=\"isFriend\">\n                <option value=\"any\">All User</option>\n                <option value=\"false\"> Without friend</option>\n                <option value=\"true\">Friend</option>\n              </Field>\n            </div>\n            <div>\n              <button className=\"btn btn-primary\" type=\"submit\">\n                Find\n              </button>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  )\n}\nexport default UserSelectorForm\n","import {FC} from 'react'\nimport {UserCard} from './UserCard'\nimport {Paginator} from './Paginator'\nimport style from '../User.module.css'\nimport UserSelector from '../UserSelector/UserSelector'\nimport {useDispatch, useSelector} from 'react-redux'\n\nimport {\n  getIsAuthorized,\n  getIsFriends,\n  getNameUser,\n  getPageNumber,\n  getPagesLimit,\n  getTotalPage,\n  getUsersList,\n  getUsersNumber,\n  getUsersRequest,\n} from '../../../../redux/reduxSelectors/profileSelector'\nimport {userDispatch} from '../UsersContainer'\nimport {\n  followSuccessful,\n  isShowFriendType,\n  requestUsers,\n  unfollowSuccessful,\n} from '../../../../redux/usersFindReducer'\n\ntype Props = {\n  choosePage: (num: number) => void\n}\n\nlet User: FC<Props> = ({choosePage}) => {\n  const pageNumber = useSelector(getPageNumber)\n  const usersNumber = useSelector(getUsersNumber)\n  const userName = useSelector(getNameUser)\n  const isFriend = useSelector(getIsFriends)\n  const PagesLimit = useSelector(getPagesLimit)\n  const totalPage = useSelector(getTotalPage)\n\n  const users = useSelector(getUsersList)\n  const usersRequest = useSelector(getUsersRequest)\n  const isAuthorized = useSelector(getIsAuthorized)\n\n  const dispatch: userDispatch = useDispatch()\n  const getUsers = (\n    pageNumber: number,\n    usersNumber: number,\n    userName: string,\n    isFriend: isShowFriendType,\n  ) => {\n    dispatch(requestUsers(pageNumber, usersNumber, userName, isFriend))\n  }\n  const follow = (userId: number) => {\n    dispatch(followSuccessful(userId))\n  }\n  const unfollow = (userId: number) => {\n    dispatch(unfollowSuccessful(userId))\n  }\n  return (\n    <div className={style.listUser}>\n      <h2>Users</h2>\n\n      <UserSelector\n        getUsers={getUsers}\n        isFriend={isFriend}\n        userName={userName}\n        pageNumber={pageNumber}\n        usersNumber={usersNumber}\n      />\n      <Paginator\n        choosePage={choosePage}\n        pageNumber={pageNumber}\n        totalPage={totalPage}\n        pagesLimit={PagesLimit}\n      />\n      {users.map((user) => {\n        return (\n          <div key={user.id}>\n            <UserCard\n              user={user}\n              usersRequest={usersRequest}\n              unfollowSuccessful={unfollow}\n              followSuccessful={follow}\n              isAuthorized={isAuthorized}\n            />\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport {User}\n","import {useDispatch, useSelector} from 'react-redux'\nimport {\n  ActionTypes,\n  isShowFriendType,\n  requestUsers,\n} from '../../../redux/usersFindReducer'\nimport React, {FC, useEffect} from 'react'\nimport {User} from './User/User'\nimport {Preloader} from '../../../common/preloader/Preloader'\nimport {\n  getIsFriends,\n  getNameUser,\n  getPageNumber,\n  getToggleIsFetching,\n  getUsersNumber,\n} from '../../../redux/reduxSelectors/profileSelector'\nimport {AppStateType} from '../../../redux/reduxStore'\nimport {ThunkDispatch} from 'redux-thunk'\nimport {useNavigate} from 'react-router-dom'\nimport styles from './User.module.css'\n\nexport type userDispatch = ThunkDispatch<AppStateType, any, ActionTypes>\n\nconst UsersPage: FC = () => {\n  const pageNumber = useSelector(getPageNumber)\n  const usersNumber = useSelector(getUsersNumber)\n  const userName = useSelector(getNameUser)\n  const isFriend = useSelector(getIsFriends)\n  const toggleIsFetching = useSelector(getToggleIsFetching)\n  const dispatch: userDispatch = useDispatch()\n\n  const navigate = useNavigate()\n\n  // логика следующих двух useEffect прописана для Browser router .Перевел проект на Hash для коректной работе на gh\n  useEffect(() => {\n    let url = new URL(window.location.href)\n    let ActualPage = pageNumber\n    let term = userName\n    let friend = isFriend\n    if (url.searchParams.has('page')) {\n      ActualPage = Number(url.searchParams.get('page'))\n    }\n    if (url.searchParams.has('term')) term = url.searchParams.get('term')!\n    if (url.searchParams.has('friend')) {\n      friend = url.searchParams.get('friend') as isShowFriendType\n    }\n    dispatch(requestUsers(ActualPage, usersNumber, term, friend))\n  }, [])\n\n  useEffect(() => {\n    let url = new URL(window.location.href)\n    pageNumber > 1\n      ? url.searchParams.set('page', String(pageNumber))\n      : url.searchParams.delete('page')\n    userName\n      ? url.searchParams.set('term', userName)\n      : url.searchParams.delete('term')\n    String(isFriend) !== 'any'\n      ? url.searchParams.set('friend', String(isFriend))\n      : url.searchParams.delete('friend')\n    const paramsString = url.searchParams.toString()\n    navigate(`?${paramsString}`)\n  }, [pageNumber, userName, isFriend])\n\n  const choosePage = (num: number) => {\n    dispatch(requestUsers(num, usersNumber, userName, isFriend))\n  }\n\n  return (\n    <div className={styles.container}>\n      <Preloader toggle={toggleIsFetching} />\n      <div className={toggleIsFetching ? styles.preloader : ''}>\n        <User choosePage={choosePage} />\n      </div>\n    </div>\n  )\n}\nexport default UsersPage\n"],"names":["UserCard","usersRequest","unfollowSuccessful","followSuccessful","isAuthorized","user","className","style","to","id","Avatar","avatar","photos","small","name","status","disabled","some","element","cn","followed","onClick","Paginator","pagesLimit","pageNumber","totalPage","choosePage","useState","openPage","setOpenPage","boldStyle","num","pages","i","push","prevState","map","classnames","chooseNumberPage","props","userName","searchByPreviousName","setSearchByPreviousName","isFriend","searchByIsFriend","initialValues","usersNumber","enableReinitialize","validateOnBlur","onSubmit","values","setSubmitting","getUsers","styles","type","value","placeholder","as","User","useSelector","getPageNumber","getUsersNumber","getNameUser","getIsFriends","PagesLimit","getPagesLimit","getTotalPage","users","getUsersList","getUsersRequest","getIsAuthorized","dispatch","useDispatch","follow","userId","unfollow","UserSelector","requestUsers","toggleIsFetching","getToggleIsFetching","navigate","useNavigate","useEffect","url","URL","window","location","href","ActualPage","term","friend","searchParams","has","Number","get","set","String","delete","paramsString","toString","Preloader","toggle"],"sourceRoot":""}