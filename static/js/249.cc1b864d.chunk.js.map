{"version":3,"file":"static/js/249.cc1b864d.chunk.js","mappings":"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","sources":["utility/FieldHelper.tsx","webpack://me-app-react/./src/components/Main/Setting/Setting.module.css?5e8d","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/StopOutlined.js","../node_modules/@ant-design/icons/es/icons/StopOutlined.js","components/Main/Setting/Setting.tsx"],"sourcesContent":["import {Field, FieldValidator} from 'formik'\nimport React from 'react'\n\nexport function FieldHelper<FormKeysType>(\n  type: string,\n  name: FormKeysType,\n  value: string | null | undefined,\n  header: string,\n  comment?: string,\n  validate?: any,\n) {\n  const h = comment ? comment : header || (name as string)\n  return (\n    <div>\n      <div>{h}</div>\n      <Field\n        type={type}\n        component={type === 'textarea' && type}\n        name={name}\n        value={value || ''}\n        validate={validate}\n      />\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"settingContainer\":\"Setting_settingContainer__sKBO9\",\"contacts\":\"Setting_contacts__c7QNl\",\"contact\":\"Setting_contact__F3Uk7\",\"lookingForAJob\":\"Setting_lookingForAJob__fLC6A\",\"lookingForAJobDescription\":\"Setting_lookingForAJobDescription__dRs0K\",\"fullName\":\"Setting_fullName__hlIR8\",\"successful\":\"Setting_successful__TMwPb\",\"error\":\"Setting_error__d3xdJ\"};","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","// This icon file is generated automatically.\nvar StopOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372 0-89 31.3-170.8 83.5-234.8l523.3 523.3C682.8 852.7 601 884 512 884zm288.5-137.2L277.2 223.5C341.2 171.3 423 140 512 140c205.4 0 372 166.6 372 372 0 89-31.3 170.8-83.5 234.8z\" } }] }, \"name\": \"stop\", \"theme\": \"outlined\" };\nexport default StopOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport StopOutlinedSvg from \"@ant-design/icons-svg/es/asn/StopOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar StopOutlined = function StopOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: StopOutlinedSvg\n  }));\n};\nStopOutlined.displayName = 'StopOutlined';\nexport default /*#__PURE__*/React.forwardRef(StopOutlined);","import {Formik, Field, Form} from 'formik'\nimport React, {FC, useEffect, useState} from 'react'\nimport {FieldHelper} from '../../../utility/FieldHelper'\nimport {connect} from 'react-redux'\nimport {\n  getProfileUser,\n  updateProfile,\n  updateProfileSuccessful,\n} from '../../../redux/profileReducer'\nimport {compose} from 'redux'\nimport {validateRequired} from '../../../utility/validate'\nimport {profileType} from '../../../types/types'\nimport {AppStateType} from '../../../redux/reduxStore'\nimport style from './Setting.module.css'\nimport {CheckOutlined, StopOutlined} from '@ant-design/icons'\n\nconst Setting: FC<PropsType> = (props) => {\n  useEffect(() => {\n    if (!props.profile && props.userId && props.getProfileUser) {\n      props.getProfileUser(props.userId)\n    }\n  }, [props.profile])\n  return (\n    <div className={style.settingContainer}>\n      <h1>Setting profile</h1>\n      {props.profile && (\n        <SettingForm\n          profile={props.profile}\n          updateProfile={props.updateProfile}\n          userId={props.userId}\n          successful={props.successful}\n          updateProfileSuccessful={props.updateProfileSuccessful}\n        />\n      )}\n    </div>\n  )\n}\n\nconst SettingForm: FC<PropsType> = ({profile, updateProfile, userId}) => {\n  const [checkForChanges, setCheckForChanges] = useState(false)\n  const validateFullName = validateRequired(4)\n  const validateLookingForAJobDescription = validateRequired(10)\n  const onSubmit = (\n    values: profileType,\n    {\n      setSubmitting,\n      setStatus,\n    }: {setSubmitting: (boolean: boolean) => void; setStatus: () => void},\n  ) => {\n    updateProfile(values, setStatus)\n\n    setSubmitting(false)\n    setCheckForChanges(true)\n  }\n  type SettingFormPropsKey = Extract<keyof profileType, string>\n  let contactsProps = profile?.contacts\n  let initialValues = {\n    userId: userId,\n    fullName: profile?.fullName,\n    lookingForAJobDescription: profile?.lookingForAJobDescription,\n\n    lookingForAJob: profile ? profile.lookingForAJob || false : false,\n    contacts: {\n      github: contactsProps ? contactsProps.github || null : null,\n      vk: contactsProps ? contactsProps.vk || null : null,\n      facebook: contactsProps ? contactsProps.facebook || null : null,\n      instagram: contactsProps ? contactsProps.instagram || null : null,\n      twitter: contactsProps ? contactsProps.twitter || null : null,\n      website: contactsProps ? contactsProps.website || null : null,\n      youtube: contactsProps ? contactsProps.youtube || null : null,\n      mainLink: contactsProps ? contactsProps.mainLink || null : null,\n    },\n  }\n\n  return (\n    <Formik initialValues={initialValues} validateOnBlur onSubmit={onSubmit}>\n      {({values, errors, touched, status}) => (\n        <Form>\n          {checkForChanges && !status && (\n            <div className={style.successful}>\n              changes saved successfully &nbsp; <CheckOutlined />\n            </div>\n          )}\n          {!!status && (\n            <div className={style.error}>\n              {status} &nbsp; <StopOutlined />\n            </div>\n          )}\n          <div>\n            <button className=\"btn btn-primary\" type=\"submit\">\n              Save\n            </button>\n          </div>\n          <div className={style.fullName}>\n            {FieldHelper<SettingFormPropsKey>(\n              'text',\n              'fullName',\n              values.fullName,\n              'Full name',\n              '',\n              validateFullName,\n            )}\n            {errors.fullName && touched.fullName && (\n              <div className=\"errors\">{errors.fullName}</div>\n            )}\n          </div>\n          <div className={style.lookingForAJobDescription}>\n            {FieldHelper<SettingFormPropsKey>(\n              'textarea',\n              'lookingForAJobDescription',\n              values.lookingForAJobDescription,\n              'Tell about work for you',\n              '',\n              validateLookingForAJobDescription,\n            )}\n            {errors.lookingForAJobDescription &&\n              touched.lookingForAJobDescription && (\n                <div className=\"errors\">{errors.lookingForAJobDescription}</div>\n              )}\n          </div>\n          <div className={style.lookingForAJob}>\n            <div>looking for a job</div>\n            <div>\n              <Field type=\"checkbox\" name=\"lookingForAJob\" />\n            </div>\n          </div>\n          <div className={style.contacts}>\n            <h4>Contacts:</h4>\n            {profile && (\n              <div>\n                {Object.keys(profile.contacts || []).map((contact, index) => {\n                  const name = contact\n                  const value =\n                    values.contacts &&\n                    values.contacts[name as keyof typeof values.contacts]\n                  const error = errors[name as keyof typeof errors]\n                  return (\n                    <div className={style.contact} key={name}>\n                      {FieldHelper('text', `contacts.${name}`, value, name)}\n                      <hr />\n                      {error && <div className=\"errors\">{error}</div>}\n                    </div>\n                  )\n                })}\n              </div>\n            )}\n          </div>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\ntype MapStateToPropsType = {\n  profile: profileType | null | undefined\n  userId: number | null\n  successful: boolean\n}\ntype MapDispatchToPropsType = {\n  updateProfile: (profileData: profileType, setStatus: Function) => void\n  getProfileUser?: (userId: number) => void\n  updateProfileSuccessful: (boolean: boolean) => void\n}\ntype OwnStateType = {}\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType & OwnStateType\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n  return {\n    profile: state.profilePage.profile,\n    userId: state.authReducer.dataUser.id,\n    successful: state.profilePage.updateProfileSuccessful,\n  }\n}\n\nconst SettingContainer = compose(\n  connect<\n    MapStateToPropsType,\n    MapDispatchToPropsType,\n    OwnStateType,\n    AppStateType\n  >(mapStateToProps, {\n    updateProfile,\n    getProfileUser,\n    updateProfileSuccessful,\n  }),\n  // AuthNavigate,\n)(Setting)\n\nexport default SettingContainer\n"],"names":["FieldHelper","type","name","value","header","comment","validate","h","component","CheckOutlined","props","ref","React","AntdIcon","_objectSpread","icon","CheckOutlinedSvg","displayName","StopOutlined","StopOutlinedSvg","SettingForm","profile","updateProfile","userId","useState","checkForChanges","setCheckForChanges","validateFullName","validateRequired","validateLookingForAJobDescription","contactsProps","contacts","initialValues","fullName","lookingForAJobDescription","lookingForAJob","github","vk","facebook","instagram","twitter","website","youtube","mainLink","validateOnBlur","onSubmit","values","setSubmitting","setStatus","errors","touched","status","className","style","Object","keys","map","contact","index","error","compose","connect","state","profilePage","authReducer","dataUser","id","successful","updateProfileSuccessful","getProfileUser","useEffect"],"sourceRoot":""}