{"version":3,"file":"static/js/436.1e63971d.chunk.js","mappings":"uQACA,EAAiC,8BAAjC,EAA2E,yBAA3E,EAA2G,oBAA3G,EAAoJ,kC,SC2BvIA,EAAgB,WAC3B,IAAMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAGtBC,GAA0BC,EAAAA,EAAAA,MAQ1BC,GAAgBC,EAAAA,EAAAA,GAAiB,GACjCC,GAAmBD,EAAAA,EAAAA,GAAiB,GAc1C,OACE,SAAC,KAAM,CAACE,cAduB,CAC/BC,MAAO,GACPC,SAAU,GACVC,YAAY,EACZX,QAAS,IAU6BY,gBAAc,EAACC,SARtC,SACfC,EAAkB,GAEd,IADHC,EAAa,EAAbA,eAjBW,SACZC,EACAC,GAEAd,GAASe,EAAAA,EAAAA,IAAUF,EAAUC,GAC/B,CAcEE,CAAML,EAFmB,EAATG,WAGhBF,GAAc,EAChB,EAE0E,SACrE,gBAAED,EAAM,EAANA,OAAQM,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAAM,OAChC,UAAC,KAAI,YACH,4BACE,iBAAKC,UAAWC,EAAgB,WAC9B,qCACA,0BACE,SAAC,KAAK,CACJC,KAAK,QACLC,KAAK,QACLC,MAAOb,EAAOL,MACdmB,SAAUvB,SAIfe,EAAOX,OAASY,EAAQZ,QACvB,gBAAKc,UAAWC,EAAW,SAAEJ,EAAOX,YAGxC,4BACE,iBAAKc,UAAWC,EAAgB,WAC9B,wCACA,0BACE,SAAC,KAAK,CACJC,KAAK,WACLC,KAAK,WACLC,MAAOb,EAAOJ,SACdkB,SAAUrB,SAKfa,EAAOV,UAAYW,EAAQX,WAC1B,gBAAKa,UAAWC,EAAW,SAAEJ,EAAOV,eAGxC,iBAAKa,UAAWC,EAAW,WACzB,SAAC,KAAK,CAACC,KAAK,WAAWC,KAAK,eAAe,kBAG7C,gBAAKH,UAAWC,EAAW,SAAEF,IAC5BtB,IACC,iBAAKuB,UAAWC,EAAW,WACzB,gBAAKK,IAAK7B,EAAS8B,IAAI,aACvB,0BACE,SAAC,KAAK,CAACL,KAAK,OAAOC,KAAK,UAAUC,MAAOb,EAAOd,gBAItD,gBAAKuB,UAAWC,EAAW,UACzB,mBAAQD,UAAU,kBAAkBE,KAAK,SAAQ,uBAI9C,GAIf,EACA,EAvGkB,WAGhB,OAFexB,EAAAA,EAAAA,IAAY8B,EAAAA,KAGlB,SAAC,KAAQ,CAACC,GAAI,mCAGrB,iBAAKT,UAAWC,EAAqB,WACnC,qDACA,gBAAKD,UAAWC,EAAyB,UACvC,SAACzB,EAAS,QAIlB,C","sources":["webpack://me-app-react/./src/components/Main/Login/Login.module.css?3d22","components/Main/Login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginContainer\":\"Login_loginContainer__EkjYe\",\"loginForm\":\"Login_loginForm__oiuZ9\",\"item\":\"Login_item__OqcEr\",\"loginFormContainer\":\"Login_loginFormContainer__PsP3u\"};","import {Field, Form, Formik, FormikHelpers} from 'formik'\nimport {validateRequired} from '../../../utility/validate'\nimport {Navigate} from 'react-router-dom'\nimport React, {FC} from 'react'\nimport {loginType} from '../../../types/types'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getCaptcha, getIsAuth} from '../../../redux/reduxSelectors/authSelector'\nimport {ActionTypes, loginUser} from '../../../redux/authReducer'\nimport {ThunkDispatch} from 'redux-thunk'\nimport {AppStateType} from '../../../redux/reduxStore'\nimport style from './Login.module.css'\n\nconst Login: FC = () => {\n  const isAuth = useSelector(getIsAuth)\n\n  if (isAuth) {\n    return <Navigate to={'/SocialNetwork_2.0/profile/me'} />\n  }\n  return (\n    <div className={style.loginContainer}>\n      <h1>Login to social network</h1>\n      <div className={style.loginFormContainer}>\n        <LoginForm />\n      </div>\n    </div>\n  )\n}\n\nexport const LoginForm: FC = () => {\n  const captcha = useSelector(getCaptcha)\n\n  type loginDispatch = ThunkDispatch<AppStateType, any, ActionTypes>\n  const dispatch: loginDispatch = useDispatch()\n  const login = (\n    dataUser: loginType,\n    setStatus: (message: Array<string>) => void,\n  ) => {\n    dispatch(loginUser(dataUser, setStatus))\n  }\n\n  const validateEmail = validateRequired(4)\n  const validatePassword = validateRequired(4)\n  const initialValues: loginType = {\n    email: '',\n    password: '',\n    rememberMe: false,\n    captcha: '',\n  }\n  const onSubmit = (\n    values: loginType,\n    {setSubmitting, setStatus}: FormikHelpers<loginType>,\n  ) => {\n    login(values, setStatus)\n    setSubmitting(false)\n  }\n  return (\n    <Formik initialValues={initialValues} validateOnBlur onSubmit={onSubmit}>\n      {({values, errors, touched, status}) => (\n        <Form>\n          <div>\n            <div className={style.loginForm}>\n              <div>Email:</div>\n              <div>\n                <Field\n                  type=\"email\"\n                  name=\"email\"\n                  value={values.email}\n                  validate={validateEmail}\n                />\n              </div>\n            </div>\n            {errors.email && touched.email && (\n              <div className={style.item}>{errors.email}</div>\n            )}\n          </div>\n          <div>\n            <div className={style.loginForm}>\n              <div>Password:</div>\n              <div>\n                <Field\n                  type=\"password\"\n                  name=\"password\"\n                  value={values.password}\n                  validate={validatePassword}\n                />\n              </div>\n            </div>\n\n            {errors.password && touched.password && (\n              <div className={style.item}>{errors.password}</div>\n            )}\n          </div>\n          <div className={style.item}>\n            <Field type=\"checkbox\" name=\"rememberMe\" />\n            remember me\n          </div>\n          <div className={style.item}>{status}</div>\n          {captcha && (\n            <div className={style.item}>\n              <img src={captcha} alt=\"captcha\" />\n              <div>\n                <Field type=\"text\" name=\"captcha\" value={values.captcha} />\n              </div>\n            </div>\n          )}\n          <div className={style.item}>\n            <button className=\"btn btn-primary\" type=\"submit\">\n              Login\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  )\n}\nexport default Login\n"],"names":["LoginForm","captcha","useSelector","getCaptcha","dispatch","useDispatch","validateEmail","validateRequired","validatePassword","initialValues","email","password","rememberMe","validateOnBlur","onSubmit","values","setSubmitting","dataUser","setStatus","loginUser","login","errors","touched","status","className","style","type","name","value","validate","src","alt","getIsAuth","to"],"sourceRoot":""}